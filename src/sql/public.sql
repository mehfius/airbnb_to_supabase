CREATE TABLE public.logs (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  room_ids text[] NOT NULL,
  execution_time text NOT NULL,
  error_messages text[] NULL,
  failed_room_ids text[] NULL,
  failed_count numeric NULL,
  successful_count numeric NULL,
  CONSTRAINT logs_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

CREATE TABLE public.prices (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  room_id text NOT NULL,
  price numeric NULL,
  total numeric NULL,
  date_range text NOT NULL,
  updated_at timestamp without time zone NULL DEFAULT now(),
  CONSTRAINT rpices_pkey PRIMARY KEY (id),
  CONSTRAINT unique_date_room UNIQUE (date_range, room_id)
) TABLESPACE pg_default;

CREATE TABLE public.rooms (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  room_id text NOT NULL,
  label text NULL,
  users uuid NULL,
  CONSTRAINT rooms_pkey PRIMARY KEY (id),
  CONSTRAINT rooms_users_fkey FOREIGN KEY (users) REFERENCES auth.users(id) ON DELETE CASCADE
) TABLESPACE pg_default;